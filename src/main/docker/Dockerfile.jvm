# ---- Этап 1: Сборка ----
# Используем образ Maven с JDK 21 (соответствует вашей целевой среде)
FROM maven:3.9-eclipse-temurin-21 AS builder

# Устанавливаем рабочую директорию
WORKDIR /app

# Копируем pom.xml для кэширования зависимостей
COPY pom.xml .
# Загружаем зависимости (этот слой будет переиспользоваться, если pom.xml не изменился)
RUN mvn dependency:go-offline -B

# Копируем остальной исходный код
COPY src ./src

# Собираем приложение, пропускаем тесты для ускорения сборки образа
# Убедитесь, что Quarkus настроен на создание JVM JAR (обычно по умолчанию)
RUN mvn package -DskipTests

# ---- Этап 2: Финальный образ ----
# Используем ваш оригинальный базовый образ
FROM registry.access.redhat.com/ubi9/openjdk-21:1.21

ENV LANGUAGE='en_US:en'
ENV JAVA_OPTS_APPEND="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
ENV JAVA_APP_JAR="/deployments/quarkus-run.jar"

# Устанавливаем рабочую директорию для развертывания
WORKDIR /deployments

# Копируем собранные артефакты из этапа 'builder'
# Обратите внимание на пути: /app/target/quarkus-app/ это стандартный вывод для Quarkus
COPY --from=builder --chown=185 /app/target/quarkus-app/lib/ ./lib/
COPY --from=builder --chown=185 /app/target/quarkus-app/*.jar ./
COPY --from=builder --chown=185 /app/target/quarkus-app/app/ ./app/
COPY --from=builder --chown=185 /app/target/quarkus-app/quarkus/ ./quarkus/

EXPOSE 8080
USER 185

ENTRYPOINT [ "/opt/jboss/container/java/run/run-java.sh" ]