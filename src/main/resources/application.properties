# JWT Configuration
# Public verification key
mp.jwt.verify.publickey.location=publicKey.pem
# Private signing key
smallrye.jwt.sign.key.location=privateKey.pem
# Required issuer
mp.jwt.verify.issuer=https://example.com/issuer

# Resources to be included in the native executable
quarkus.native.resources.includes=privateKey.pem,publicKey.pem

# --- PostgreSQL Configuration ---

# Common database kind (required for Dev Services and Hibernate)
quarkus.datasource.db-kind=postgresql

# --- PRODUCTION Profile Configuration (when 'prod' profile is active) ---
# These settings will be used when you build a jar/native image and run it,
# or if you explicitly activate the 'prod' profile.
# Replace 'localhost:5432/quarkus' with your actual production connection string if different.
%prod.quarkus.datasource.username=quarkus
%prod.quarkus.datasource.password=quarkus
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/quarkus
# For production, 'drop-and-create' is usually not used. Consider 'validate', 'update', or 'none'.
%prod.quarkus.hibernate-orm.database.generation=drop-and-create

# --- DEVELOPMENT Profile Configuration ('dev' profile) -------------------------------------------
# -------------------------------------------------------------------------------------------------
# For the 'dev' profile, JDBC URL, username, and password are NOT explicitly set.
# This allows Quarkus Dev Services to automatically start PostgreSQL in Docker
# if Docker is available and no other active configurations for this profile exist.
# 'drop-and-create' is often a good choice for development to start with a clean database.
%dev.quarkus.hibernate-orm.database.generation=drop-and-create

# JWT Debug Logging - Enabled only for 'dev' profile
%dev.quarkus.log.category."io.smallrye.jwt".level=DEBUG
%dev.quarkus.log.category."org.jose4j".level=DEBUG

# --- TEST Profile Configuration ('test' profile) -------------------------------------------------
# -------------------------------------------------------------------------------------------------

# For the 'test' profile, similar to 'dev', JDBC URL, username, and password are NOT explicitly set,
# allowing Dev Services to manage the database.
# 'drop-and-create' ensures tests run against a clean database schema.
%test.quarkus.hibernate-orm.database.generation=drop-and-create

# Optional: If you want Dev Services to use a specific PostgreSQL image for dev/test (uncomment to use):
# %dev.quarkus.datasource.devservices.image-name=postgres:14-alpine
# %test.quarkus.datasource.devservices.image-name=postgres:14-alpine